The number sequence described below is called a "hailstone number sequence". The purpose of this program is to take a number chosen by user input, follow the correct steps, and calculate-and-print the list of numbers generated by the pattern.

The pattern in question goes as follows:
Number chosen is X
If X is even, X / 2. The resulting number is now X.
If X is odd, (X * 3) + 1. The resulting number is now X. 

This is then repeated; the step that applies is now used with the new X resulting from the previous step. 

At some point, this sequence will start an infinite loop of the numbers 4-2-1 (hence the other name for the hailstone sequence being the 4-2-1 sequence). However, the program is designed to check for X == 1, and when that occurs it will stop. At that point, it prints a line stating how many steps were necessary to reach one.